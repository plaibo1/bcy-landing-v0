import { EXTERNAL_API_BASE_URL } from "@/consts";
import { type NextRequest, NextResponse } from "next/server";

interface VerificationRequest {
  phone: string;
  code?: string;
  action: "send" | "verify";
}

export async function POST(request: NextRequest) {
  try {
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –∑–∞–ø—Ä–æ—Å–∞
    const body: VerificationRequest = await request.json();

    // –õ–æ–≥–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
    if (process.env.NODE_ENV === "development") {
      console.log("üì§ Sending verification request:", {
        ...body,
        code: body.code ? "***" : undefined,
      });
    }

    // –ü—Ä–æ–∫—Å–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤–Ω–µ—à–Ω–µ–µ API
    const response = await fetch(
      `${EXTERNAL_API_BASE_URL}/v1/verification/phone`,
      {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
          // –ü–µ—Ä–µ–¥–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
          ...(request.headers.get("authorization") && {
            Authorization: request.headers.get("authorization")!,
          }),
        },
        body: JSON.stringify(body),
      }
    );

    // –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç –≤–Ω–µ—à–Ω–µ–≥–æ API
    const data = await response.json();

    // –õ–æ–≥–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ (–±–µ–∑ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö)
    if (process.env.NODE_ENV === "development") {
      console.log("üì• Verification response:", data);
    }

    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ç–≤–µ—Ç —Å —Ç–µ–º –∂–µ —Å—Ç–∞—Ç—É—Å–æ–º
    return NextResponse.json(data, { status: response.status });
  } catch (error) {
    console.error(
      "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞ verification-phone:",
      error
    );

    return NextResponse.json(
      {
        success: false,
        error: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Ç–µ–ª–µ—Ñ–æ–Ω–∞",
        code: "PROXY_ERROR",
      },
      { status: 500 }
    );
  }
}
