import { type NextRequest, NextResponse } from "next/server";
import type { ApiFormData } from "@/lib/api";
import { EXTERNAL_API_BASE_URL } from "@/consts";

export async function POST(request: NextRequest) {
  try {
    // –ü–æ–ª—É—á–∞–µ–º —É–∂–µ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –∑–∞–ø—Ä–æ—Å–∞
    const body: ApiFormData = await request.json();

    // –õ–æ–≥–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
    if (process.env.NODE_ENV === "development") {
      console.log("üì§ Sending to external API:", body);
    }

    // –ü—Ä–æ–∫—Å–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤–Ω–µ—à–Ω–µ–µ API
    const response = await fetch(`${EXTERNAL_API_BASE_URL}/v1/external-lead`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        // –ü–µ—Ä–µ–¥–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
        ...(request.headers.get("authorization") && {
          Authorization: request.headers.get("authorization")!,
        }),
      },
      body: JSON.stringify(body),
    });

    if (response.status === 201) {
      return NextResponse.json(response, { status: response.status });
    }

    // –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç –≤–Ω–µ—à–Ω–µ–≥–æ API
    const data = await response.json();

    // –õ–æ–≥–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
    if (process.env.NODE_ENV === "development") {
      console.log("üì• Response from external API:", data);
    }

    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ç–≤–µ—Ç —Å —Ç–µ–º –∂–µ —Å—Ç–∞—Ç—É—Å–æ–º
    return NextResponse.json(data, { status: response.status });
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞ external-lead:", error);

    return NextResponse.json(
      {
        success: false,
        error: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞—è–≤–∫–∏",
        code: "PROXY_ERROR",
      },
      { status: 500 }
    );
  }
}
